name: Manual NPM Release

on:
  workflow_dispatch:
    inputs:
      version_type:
        description: 'Version bump type'
        required: true
        default: 'patch'
        type: choice
        options:
          - patch
          - minor
          - major
          - prerelease
      custom_version:
        description: 'Custom version (optional, overrides version_type)'
        required: false
        type: string
      tag_suffix:
        description: 'Tag suffix (e.g., beta, alpha)'
        required: false
        type: string

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0
      
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          registry-url: 'https://registry.npmjs.org'
      
      - run: npm ci
      
      - name: Build project
        run: npm run build
      
      - name: Configure Git
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
      
      - name: Version bump (custom)
        if: ${{ github.event.inputs.custom_version != '' }}
        run: |
          npm version ${{ github.event.inputs.custom_version }} --no-git-tag-version
          git add package.json package-lock.json
          git commit -m "Release v${{ github.event.inputs.custom_version }}"
          git tag v${{ github.event.inputs.custom_version }}
      
      - name: Version bump (preset)
        if: ${{ github.event.inputs.custom_version == '' }}
        run: |
          if [ "${{ github.event.inputs.tag_suffix }}" != "" ]; then
            npm version ${{ github.event.inputs.version_type }} --preid=${{ github.event.inputs.tag_suffix }}
          else
            npm version ${{ github.event.inputs.version_type }}
          fi
      
      - name: Get version
        id: version
        run: echo "version=$(node -p "require('./package.json').version")" >> $GITHUB_OUTPUT
      
      - name: Push tag
        run: git push origin main --tags
      
      - name: Package for release
        run: npm pack
      
      - name: Publish to NPM
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ steps.version.outputs.version }}
          name: Release v${{ steps.version.outputs.version }}
          files: '*.tgz'
          generate_release_notes: true
          draft: false
          prerelease: ${{ contains(steps.version.outputs.version, '-') }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
